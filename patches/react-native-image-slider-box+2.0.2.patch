diff --git a/node_modules/react-native-image-slider-box/dist/SliderBox.js b/node_modules/react-native-image-slider-box/dist/SliderBox.js
index 8f6d67c..b470202 100644
--- a/node_modules/react-native-image-slider-box/dist/SliderBox.js
+++ b/node_modules/react-native-image-slider-box/dist/SliderBox.js
@@ -5,9 +5,11 @@ import {
   ActivityIndicator,
   TouchableHighlight,
   Dimensions,
+  Text
 } from "react-native";
 
 import Carousel, { Pagination } from "react-native-snap-carousel"; //Thank From distributer(s) of this lib
+import { Colors } from "../../../config";
 import styles from "./SliderBox.style";
 
 // -------------------Props--------------------
@@ -93,27 +95,46 @@ export class SliderBox extends Component {
           onPress={this.onCurrentImagePressedHandler}
           activeOpacity={activeOpacity}
         >
-          <ImageComponent
-            style={[
-              {
-                width: "100%",
-                height: sliderBoxHeight || 200,
-                alignSelf: "center",
-              },
-              ImageComponentStyle,
-            ]}
-            source={typeof item === "string" ? { uri: item } : item}
-            resizeMethod={resizeMethod || "resize"}
-            resizeMode={resizeMode || "cover"}
-            //onLoad={() => {}}
-            //onLoadStart={() => {}}
-            onLoadEnd={() => {
-              let t = this.state.loading;
-              t[index] = true;
-              this.setState({ loading: t });
-            }}
-            {...this.props}
-          />
+          <View>
+            <ImageComponent
+              style={[
+                {
+                  width: "100%",
+                  height: sliderBoxHeight || 250,
+                  alignSelf: "center",
+                },
+                ImageComponentStyle,
+              ]}
+              source={typeof item === "object" ? { uri: item.cover_image } : {uri : item}}
+              resizeMethod={resizeMethod || "resize"}
+              // resizeMode={resizeMode || "cover"}
+              //onLoad={() => {}}
+              //onLoadStart={() => {}}
+              onLoadEnd={() => {
+                let t = this.state.loading;
+                t[index] = true;
+                this.setState({ loading: t });
+              }}
+              {...this.props}
+            />
+            {item?.name==false ? null : <View
+						style={{
+
+							position: 'absolute',
+							resizeMode: 'cover',
+							bottom: 0,
+							backgroundColor: 'rgba(0,0,0,0.3)',
+							alignItems: 'flex-end',
+							justifyContent: 'center',
+							paddingHorizontal: 10,
+							borderRadius: 2,
+							right: 3
+						}}>
+						<View >
+							<Text style={{ fontSize: 16, paddingVertical: 5, color: Colors.white }}>{`${item?.common_name ? item.common_name : 'N/A'}`}</Text>
+						</View>
+					</View> }
+          </View>
         </TouchableHighlight>
         {!this.state.loading[index] && (
           <LoaderComponent
